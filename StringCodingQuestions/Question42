Given a positive integer N, return its corresponding column title as it would appear in an Excel sheet.
For N =1 we have column A, for 27 we have AA and so on.

Note: The alphabets are all in uppercase.

Example 1:

Input:
N = 51
Output: AY
Your Task:
Complete the function ExcelColumn() which takes N as input and returns output string.

Expected Time Complexity: O(Log(N))
Expected Auxiliary Space: O(Log(N))

Constraints:
1 ≤ N ≤ 107

-------------------------------------------



class Solution {
    public String excelColumn(int N){
        String columnTitle = "";
        Integer nCopy = N;
        while(N>=0){
            if(N/26>26){
                if(N%26==0){
                    N = N-26;
                }
                columnTitle += excelColumn(N/26);
                N=N%26;
            }else{
                if(N>26){
                    if(N%26==0){
                        N = N-26;
                    }
                    columnTitle += getLastAlphabet(N/26);
                    N = N/26;
                }
                else{
                    columnTitle += getLastAlphabet(nCopy%26);
                    N=-1;
                }   
            }
        }
        return columnTitle;
        
    }
    
    private String generateA(Integer count){
        String result = "";
        if(count>0){
            while(count>0){
                result += "A";
                count--;
            }
        }
        return result;
    }
    
    private String getLastAlphabet(Integer count){
        Map<Integer, String> alphabetMap = new HashMap<>();
        alphabetMap.put(0, "Z");
        alphabetMap.put(1, "A");
        alphabetMap.put(2, "B");
        alphabetMap.put(3, "C");
        alphabetMap.put(4, "D");
        alphabetMap.put(5, "E");
        alphabetMap.put(6, "F");
        alphabetMap.put(7, "G");
        alphabetMap.put(8, "H");
        alphabetMap.put(9, "I");
        alphabetMap.put(10, "J");
        alphabetMap.put(11, "K");
        alphabetMap.put(12, "L");
        alphabetMap.put(13, "M");
        alphabetMap.put(14, "N");
        alphabetMap.put(15, "O");
        alphabetMap.put(16, "P");
        alphabetMap.put(17, "Q");
        alphabetMap.put(18, "R");
        alphabetMap.put(19, "S");
        alphabetMap.put(20, "T");
        alphabetMap.put(21, "U");
        alphabetMap.put(22, "V");
        alphabetMap.put(23, "W");
        alphabetMap.put(24, "X");
        alphabetMap.put(25, "Y");
        alphabetMap.put(26, "Z");
        return alphabetMap.get(count);
    }
}
