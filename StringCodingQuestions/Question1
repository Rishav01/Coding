Write a Java program to find the duplicate words and their number of occurrences in a string.
public static void main(String[] args)
    {
        duplicateWords("Bread butter and bread");
 
        duplicateWords("Java is java again java");
 
        duplicateWords("Super Man Bat Man Spider Man");
    }
    
Output :

bread : 2
java : 3
man : 3
------------------------------------------------------------------------------------------   
Solution 1: Time Complexity O(n)

import java.util.*;

public class Test {
    public static void main(String[] args)
    {
        duplicateWords("Bread butter and bread");
        duplicateWords("Java is java again java");
        duplicateWords("Super Man Bat Man Spider Man");
    }

    private static void duplicateWords(String input){
        Map<String, Integer> wordsAndFrequency = new HashMap<>();
        StringTokenizer tokenizer = new StringTokenizer(input);
        while(tokenizer.hasMoreTokens()){
            String token = tokenizer.nextToken().toLowerCase(Locale.ROOT);
            wordsAndFrequency.put(token, wordsAndFrequency.get(token) == null ?
                    1 : wordsAndFrequency.get(token)+1);
        }
        for(Map.Entry entry: wordsAndFrequency.entrySet()){
            if((Integer) entry.getValue()>1){
                System.out.println(entry.getKey().toString().concat(": ").concat(entry.getValue().toString()));
            }
        }
    }
}

/*
Approach:
a. We first need to get the words out of the string. We can do it with split(), stringTokenizer or simply by i and j with help of space.
b. Once we get the word then we can iterate over the list of word to store in the map (the word as key and frequncy as value)

Note:
a. If we have to avoid using Map then we can need to have another loop. Instead of storing frequncy in map we will simply print it. 
(Ref: https://www.linkedin.com/pulse/program-write-java-find-duplicate-words-number-string-praveen-kumar/)

Skills/Knowledge:
a. to tokenize a sentence with delimeter space or anything else.
b. How to print the key and value pair of a map
3. HashMap get(key) returns null when entry with that key is not present
4. HashMap keys are case sensitive. So, Bread and bread will be considered two different keys.
5. There could be one more way. Use String class split(" ") method which will give String[] words. Then, use this string array words in for each loop for get wordFrequency map
7. To tokenize the sentence without StringTokenzier.
 */
