1. Show exmaple of Simple Factory Design Pattern
2. Show exmaple of Factory Method Design Pattern
3. Show exmaple of Abstract Factory Design Pattern
4. Show example of Singleton Eager
5. Show example of Singleton Lazy and double checking

1. Show exmaple of Factory Design Pattern

public abstract class Employee {
    int id;
    String name;

    public abstract int getRate();
}

public class ITProfessional extends Employee{

    int rate = 100;

    @Override
    public int getRate() {
        return rate;
    }
}

public class FinanceProfessional extends Employee{

    int rate = 120;

    @Override
    public int getRate() {
        return rate;
    }
}

public class EmployeeFactory {

    public static Employee getEmployee(String type){
        if(type.equalsIgnoreCase("IT")){
            return new ITProfessional();
        }else if(type.equalsIgnoreCase("finance")){
            return new FinanceProfessional();
        }
        return null;
    }
}

public class Client {

    public static void main(String args[]){
        Employee e = EmployeeFactory.getEmployee("IT");
        System.out.println(e.getRate());
        Employee e1 = EmployeeFactory.getEmployee("finance");
        System.out.println(e1.getRate());
    }
}

-----------------------------------------------------------------------------------------------

|Singleton Design Pattern|
